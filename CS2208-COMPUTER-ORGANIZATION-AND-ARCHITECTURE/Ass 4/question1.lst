


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question_one, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000 E28F0088 
                       Start   ADR              r0, UPC4    ;register r0 to poi
                                                            nt to the string
    4 00000004 E3A0100C        MOV              r1, #ARL    ;initialize loop co
                                                            unter in r1 to 12
    5 00000008 E3A02000        MOV              r2, #0      ;initialize and cle
                                                            ar the sum in r2. t
                                                            his is the first su
                                                            m
    6 0000000C E3A03000        MOV              r3, #0      ;initialize and cle
                                                            ar the sum in r3. t
                                                            his is the second s
                                                            um
    7 00000010 E5D04000 
                       loop    LDRB             r4, [r0, #0] ;copy the element 
                                                            pointed to by r0 in
                                                            to r4
    8 00000014 E2444030        SUB              r4, r4, #AS ;remove 30 to get d
                                                            igit to counter asc
                                                            ii value
    9 00000018 E5D05001        LDRB             r5, [r0, #1] ;copy the next ele
                                                            ment pointed to by 
                                                            r0 into r5
   10 0000001C E2455030        SUB              r5, r5, #AS ;remove 30 to get d
                                                            igit to counter asc
                                                            ii value
   11 00000020 E2800002        ADD              r0, r0, #2  ;point to the eleme
                                                            nt 2 after in the s
                                                            tring
   12 00000024 E0822004        ADD              r2, r2, r4  ;adds to the runnin
                                                            g total of first su
                                                            m
   13 00000028 E0833005        ADD              r3, r3, r5  ;adds to the runnin
                                                            g total of second s
                                                            um
   14 0000002C E2511002        SUBS             r1, r1, #2  ;decrements the loo
                                                            p counter as it 
   15 00000030 1AFFFFF6        BNE              loop        ; repeat until all 
                                                            elements added
   16 00000034 E0433005        SUB              r3, r3, r5  ;remove this since 
                                                            it added the check 
                                                            digit
   17 00000038 E3A01003        MOV              r1, #3      ;initiate r1 with 3
                                                             for multiplication
                                                            
   18 0000003C E0020291        MUL              r2, r1, r2  ;multiply the first
                                                             sum by 3
   19 00000040 E0822003        ADD              r2, r2, r3  ;adds the first sum
                                                             to the second sum
   20 00000044 E0822005        ADD              r2, r2, r5  ;it adds the check 
                                                            digit which is in r
                                                            5
   21 00000048 E3520000 
                       Loop    CMP              r2, #0      ;checks to see if t
                                                            he sum is 0 yet or 
                                                            at all
   22 0000004C 0A000002        BEQ              ValidExit   ;if it is equal to 



ARM Macro Assembler    Page 2 


                                                            0, it is a multiple
                                                             of 10, so jump to 
                                                            ValidExit
   23 00000050 E252200A        SUBS             r2, r2, #10 ;subtract the value
                                                             by 10 to see if it
                                                             is a multiple of 1
                                                            0
   24 00000054 4A000002        BMI              InvExit     ;if it is negative,
                                                             the sum must have 
                                                            passed 0 and theref
                                                            ore it is not a mul
                                                            tiple of 10
   25 00000058 EAFFFFFA        B                Loop        ;repeat while true
   26 0000005C E3A00001 
                       ValidExit
                               MOV              r0, #1      ;move number 1 to r
                                                            0 and exit
   27 00000060 EAFFFFFE 
                       Endless B                Endless
   28 00000064 E3A00002 
                       InvExit MOV              r0, #2      ;move number 2 in r
                                                            0 and exit
   29 00000068 EAFFFFFE 
                       Endless2
                               B                Endless2
   30 0000006C 30 31 33 
              38 30 30 
              31 35 30 
              37 33 38 UPC     DCB              "013800150738" 
                                                            ;correct UPC string
                                                            
   31 00000078 30 36 30 
              33 38 33 
              37 35 35 
              35 37 37 UPC2    DCB              "060383755577" 
                                                            ;correct UPC string
                                                            
   32 00000084 30 36 35 
              36 33 33 
              34 35 34 
              37 31 32 UPC3    DCB              "065633454712" ;correct UPC str
                                                            ing 
   33 00000090 30 36 35 
              36 33 33 
              34 35 34 
              37 31 33 UPC4    DCB              "065633454713" ;incorrect UPC s
                                                            tring 
   34 0000009C 00000030 
                       AS      EQU              0x30        ;this is the ascii 
                                                            shift that needs to
                                                             be applied to valu
                                                            es
   35 0000009C 0000000C 
                       ARL     EQU              12          ;code has 12 digits
                                                            
   36 0000009C 0000000A 
                       ML      EQU              10          ;useful to check if
                                                             variable is divisi
                                                            ble by 10



ARM Macro Assembler    Page 3 


   37 0000009C                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question1.d -o.\q
uestion1.o -I"D:\Program Files\KEIL\ARM\RV31\INC" -I"D:\Program Files\KEIL\ARM\
CMSIS\Include" --predefine="__EVAL SETA 1" --list=.\question1.lst question1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Endless 00000060

Symbol: Endless
   Definitions
      At line 27 in file question1.s
   Uses
      At line 27 in file question1.s
Comment: Endless used once
Endless2 00000068

Symbol: Endless2
   Definitions
      At line 29 in file question1.s
   Uses
      At line 29 in file question1.s
Comment: Endless2 used once
InvExit 00000064

Symbol: InvExit
   Definitions
      At line 28 in file question1.s
   Uses
      At line 24 in file question1.s
Comment: InvExit used once
Loop 00000048

Symbol: Loop
   Definitions
      At line 21 in file question1.s
   Uses
      At line 25 in file question1.s
Comment: Loop used once
Start 00000000

Symbol: Start
   Definitions
      At line 3 in file question1.s
   Uses
      None
Comment: Start unused
UPC 0000006C

Symbol: UPC
   Definitions
      At line 30 in file question1.s
   Uses
      None
Comment: UPC unused
UPC2 00000078

Symbol: UPC2
   Definitions
      At line 31 in file question1.s
   Uses
      None
Comment: UPC2 unused
UPC3 00000084

Symbol: UPC3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 32 in file question1.s
   Uses
      None
Comment: UPC3 unused
UPC4 00000090

Symbol: UPC4
   Definitions
      At line 33 in file question1.s
   Uses
      At line 3 in file question1.s
Comment: UPC4 used once
ValidExit 0000005C

Symbol: ValidExit
   Definitions
      At line 26 in file question1.s
   Uses
      At line 22 in file question1.s
Comment: ValidExit used once
loop 00000010

Symbol: loop
   Definitions
      At line 7 in file question1.s
   Uses
      At line 15 in file question1.s
Comment: loop used once
question_one 00000000

Symbol: question_one
   Definitions
      At line 1 in file question1.s
   Uses
      None
Comment: question_one unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ARL 0000000C

Symbol: ARL
   Definitions
      At line 35 in file question1.s
   Uses
      At line 4 in file question1.s
Comment: ARL used once
AS 00000030

Symbol: AS
   Definitions
      At line 34 in file question1.s
   Uses
      At line 8 in file question1.s
      At line 10 in file question1.s

ML 0000000A

Symbol: ML
   Definitions
      At line 36 in file question1.s
   Uses
      None
Comment: ML unused
3 symbols
346 symbols in table
